// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace NetCoreDbTest
{

    // MyTable
    [Table("MyTable", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MyTable
    {

        ///<summary>
        /// MyId (Primary key) (length: 10)
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"MyId", Order = 1, TypeName = "nchar")]
        [Index(@"PK_MyTable", 1, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "My ID")]
        public string MyId { get; set; }

        ///<summary>
        /// MyTable (length: 50)
        ///</summary>
        [Column(@"MyTable", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "My table")]
        public string MyTable_ { get; set; }

        ///<summary>
        /// str1 (length: 10)
        ///</summary>
        [Column(@"str1", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Str 1")]
        public string Str1 { get; set; }

        ///<summary>
        /// str2 (length: 100)
        ///</summary>
        [Column(@"str2", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Str 2")]
        public string Str2 { get; set; }

        ///<summary>
        /// dec1
        ///</summary>
        [Column(@"dec1", Order = 5, TypeName = "decimal")]
        [Display(Name = "Dec 1")]
        public decimal? Dec1 { get; set; }

        ///<summary>
        /// varcharmax
        ///</summary>
        [Column(@"varcharmax", Order = 6, TypeName = "varchar(max)")]
        [Display(Name = "Varcharmax")]
        public string Varcharmax { get; set; }
    }

}
// </auto-generated>
