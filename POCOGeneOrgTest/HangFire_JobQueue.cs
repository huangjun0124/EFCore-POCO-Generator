// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace NetCoreDbTest
{

    // JobQueue
    [Table("JobQueue", Schema = "HangFire")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HangFire_JobQueue
    {

        ///<summary>
        /// Id (Primary key)
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_HangFire_JobQueue", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        ///<summary>
        /// JobId
        ///</summary>
        [Column(@"JobId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Job ID")]
        public int JobId { get; set; }

        ///<summary>
        /// Queue (length: 50)
        ///</summary>
        [Column(@"Queue", Order = 3, TypeName = "nvarchar")]
        [Index(@"IX_HangFire_JobQueue_QueueAndFetchedAt", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Queue")]
        public string Queue { get; set; }

        ///<summary>
        /// FetchedAt
        ///</summary>
        [Column(@"FetchedAt", Order = 4, TypeName = "datetime")]
        [Index(@"IX_HangFire_JobQueue_QueueAndFetchedAt", 2, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Fetched at")]
        public System.DateTime? FetchedAt { get; set; }
    }

}
// </auto-generated>
