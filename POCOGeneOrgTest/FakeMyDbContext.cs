// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace NetCoreDbTest
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeMyDbContext : IMyDbContext
    {
        public System.Data.Entity.DbSet<HangFire_AggregatedCounter> HangFire_AggregatedCounters { get; set; }
        public System.Data.Entity.DbSet<HangFire_Counter> HangFire_Counters { get; set; }
        public System.Data.Entity.DbSet<HangFire_Hash> HangFire_Hashes { get; set; }
        public System.Data.Entity.DbSet<HangFire_Job> HangFire_Jobs { get; set; }
        public System.Data.Entity.DbSet<HangFire_JobParameter> HangFire_JobParameters { get; set; }
        public System.Data.Entity.DbSet<HangFire_JobQueue> HangFire_JobQueues { get; set; }
        public System.Data.Entity.DbSet<HangFire_List> HangFire_Lists { get; set; }
        public System.Data.Entity.DbSet<HangFire_Schema> HangFire_Schemata { get; set; }
        public System.Data.Entity.DbSet<HangFire_Server> HangFire_Servers { get; set; }
        public System.Data.Entity.DbSet<HangFire_Set> HangFire_Sets { get; set; }
        public System.Data.Entity.DbSet<HangFire_State> HangFire_States { get; set; }
        public System.Data.Entity.DbSet<JobParamView> JobParamViews { get; set; }
        public System.Data.Entity.DbSet<MyTable> MyTables { get; set; }
        public System.Data.Entity.DbSet<View2> View2 { get; set; }

        public FakeMyDbContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            HangFire_AggregatedCounters = new FakeDbSet<HangFire_AggregatedCounter>("Id");
            HangFire_Counters = new FakeDbSet<HangFire_Counter>("Id");
            HangFire_Hashes = new FakeDbSet<HangFire_Hash>("Id");
            HangFire_Jobs = new FakeDbSet<HangFire_Job>("Id");
            HangFire_JobParameters = new FakeDbSet<HangFire_JobParameter>("Id");
            HangFire_JobQueues = new FakeDbSet<HangFire_JobQueue>("Id");
            HangFire_Lists = new FakeDbSet<HangFire_List>("Id");
            HangFire_Schemata = new FakeDbSet<HangFire_Schema>("Version");
            HangFire_Servers = new FakeDbSet<HangFire_Server>("Id");
            HangFire_Sets = new FakeDbSet<HangFire_Set>("Id");
            HangFire_States = new FakeDbSet<HangFire_State>("Id");
            JobParamViews = new FakeDbSet<JobParamView>("InvocationData", "Arguments", "CreatedAt", "ParamName");
            MyTables = new FakeDbSet<MyTable>("MyId");
            View2 = new FakeDbSet<View2>("Id", "InvocationData", "Arguments", "CreatedAt", "Expr1", "JobId", "Name");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public System.Collections.Generic.List<MyOwnProcReturnModel> MyOwnProc(int? param1, string param2, out string nvarParam, decimal? dec)
        {
            int procResult;
            return MyOwnProc(param1, param2, out nvarParam, dec, out procResult);
        }

        public System.Collections.Generic.List<MyOwnProcReturnModel> MyOwnProc(int? param1, string param2, out string nvarParam, decimal? dec, out int procResult)
        {
            nvarParam = default(string);

            procResult = 0;
            return new System.Collections.Generic.List<MyOwnProcReturnModel>();
        }

    }
}
// </auto-generated>
